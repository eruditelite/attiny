################################################################################
#
# Makefile for "attiny".
#
# Basic examples of using attiny84/attiny85 with registers accessible via I2C.
#
################################################################################

ifeq ($(AVRTARGET),84)

###################################################
## Setup for attiny84 on spidev0.0 with I2C id 4 ##
###################################################

MCU = attiny84
AVRDUDEMCU = t84
SPIDEV = /dev/spidev0.0

define SWITCH_PI_TO_SPI
gpio -g mode 0 in
gpio -g mode 1 in
gpio -g mode 9 alt0
gpio -g mode 10 alt0
gpio -g mode 11 alt0
endef

define SWITCH_PI_TO_I2C
gpio -g mode 0 alt0
gpio -g mode 1 alt0
gpio -g mode 9 in
gpio -g mode 10 in
gpio -g mode 11 in
endef

endif

ifeq ($(AVRTARGET),85)

###################################################
## Setup for attiny85 on spidev1.0 with I2C id 5 ##
###################################################

MCU = attiny85
AVRDUDEMCU = t85
SPIDEV = /dev/spidev1.0

define SWITCH_PI_TO_SPI
gpio -g mode 2 in
gpio -g mode 3 in
gpio -g mode 19 alt4
gpio -g mode 20 alt4
gpio -g mode 21 alt4
endef

define SWITCH_PI_TO_I2C
gpio -g mode 2 alt0
gpio -g mode 3 alt0
gpio -g mode 19 in
gpio -g mode 20 in
gpio -g mode 21 in
endef

endif

############################################
## Make Sure AVRTARGET is either 84 or 85 ##
############################################

ifndef MCU
$(error AVRTARGET must be either 84 or 85)
endif

##################
## Reset Macros ##
##################

define SET_RESET
gpio -g mode 22 out
gpio -g write 22 0
endef

define CLEAR_RESET
gpio -g mode 22 out
gpio -g write 22 1
gpio -g mode 22 in
endef

###############################
## Build options and Targets ##
###############################

ATTINY = .
AVR_CC = avr-gcc
AVR_AR = avr-ar
AVR_CFLAGS = -Os -Wall -mcall-prologues -mmcu=$(MCU) -I$(ATTINY)
AVR_OBJ2HEX = avr-objcopy
AVRDUDE = avrdude
AVRDUDE_OPTIONS = -p $(AVRDUDEMCU) -P $(SPIDEV) -c linuxspi -b 10000
DEPS =
OBJS =

.PHONY : all cscope install fuse reset clean

all : $(ATTINY)/libattiny.a attiny attiny.hex access wavegen

access : access.c
	gcc -Wall -pthread -DAVRTARGET=$(AVRTARGET) -o $@ $< -lpigpiod_if2 -lrt

wavegen : $(ATTINY)/wavegen.c
	gcc -Wall -o $@ $< -lm

attiny.hex : attiny
	$(AVR_OBJ2HEX) -R .eeprom -O ihex $< $@

attiny : main.o $(ATTINY)/libattiny.a
	$(AVR_CC) $(AVR_CFLAGS) -o $@ $^
	avr-size -C --mcu $(MCU) $@

main.o : main.c
	$(AVR_CC) $(AVR_CFLAGS) -MM -c -o main.d $<
	$(AVR_CC) $(AVR_CFLAGS) -c -o $@ $<

## libattiny.a

$(ATTINY)/libattiny.a : $(ATTINY)/i2c.o $(ATTINY)/tick.o
	$(AVR_AR) -cr $@ $^

$(ATTINY)/i2c.o : $(ATTINY)/i2c.c
	$(AVR_CC) $(AVR_CFLAGS) -MM -c -o $(ATTINY)/i2c.d $<
	$(AVR_CC) $(AVR_CFLAGS) -c -o $@ $<

$(ATTINY)/tick.o : $(ATTINY)/tick.c
	$(AVR_CC) $(AVR_CFLAGS) -MM -c -o $(ATTINY)/tick.d $<
	$(AVR_CC) $(AVR_CFLAGS) -c -o $@ $<

DEPS += $(ATTINY)/i2c.d $(ATTINY)/tick.d

## convinience targets...

cscope : main.c \
	$(ATTINY)/i2c.c $(ATTINY)/i2c.h $(ATTINY)/tick.c $(ATTINY)/tick.h
	$(AVR_CC) $(AVR_CFLAGS) -M $^ \
		| sed -e 's/[\\ ]/\n/g' \
		| sed -e '/^$$/d' -e '/\.o:[ \t]*$$/d' \
		| sort -u >cscope.files
	cscope -b

install : attiny.hex
	@$(call SWITCH_PI_TO_SPI)
	@$(call SET_RESET)
	sudo $(AVRDUDE) $(AVRDUDE_OPTIONS) -U flash:w:$<
	@$(call CLEAR_RESET)
	@$(call SWITCH_PI_TO_I2C)

newwave : wave.bin
	@$(call SWITCH_PI_TO_SPI)
	@$(call SET_RESET)
	$(AVR_OBJ2HEX) -I binary -O ihex $< wave.hex
	sudo $(AVRDUDE) $(AVRDUDE_OPTIONS) -U eeprom:w:wave.hex
	rm -f wave.hex
	@$(call CLEAR_RESET)
	@$(call SWITCH_PI_TO_I2C)

fuse :
	@$(call SWITCH_PI_TO_SPI)
	@$(call SET_RESET)
	sudo $(AVRDUDE) $(AVRDUDE_OPTIONS) \
		-U lfuse:w:0xe2:m -U hfuse:w:0xdf:m -U efuse:w:0xff:m
	@$(call CLEAR_RESET)
	@$(call SWITCH_PI_TO_I2C)

reset :
	@$(call SET_RESET)
	@$(call CLEAR_RESET)
	@$(call SWITCH_PI_TO_I2C)

clean :
	@rm -f *~ *.d *.o *.hex *.a *.vcd cscope.* attiny access wavegen

-include $(DEPS)
